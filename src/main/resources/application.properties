spring.application.name=splitapp

# ========== Database Configuration ==========
spring.datasource.url=${SPRING_DATASOURCE_URL}
spring.datasource.username=${SPRING_DATASOURCE_USERNAME}
spring.datasource.password=${SPRING_DATASOURCE_PASSWORD}
spring.datasource.driver-class-name=org.postgresql.Driver
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.hibernate.ddl-auto=update
spring.jpa.hibernate.naming-strategy=org.hibernate.cfg.ImprovedNamingStrategy

# ========== Server Port (Render provides PORT env var) ==========
server.port=${PORT:8080}

# ========== JWT Configuration ==========
jwt.access.secretKey=${JWT_ACCESS_SECRET_KEY}
jwt.refresh.secretKey=${JWT_REFRESH_SECRET_KEY}
jwt.access.expirationTimeInMinutes=15
jwt.refresh.expirationTimeInMinutes=200

# ========== Google OAuth2 ==========
spring.security.oauth2.client.registration.google.client-id=${GOOGLE_CLIENT_ID}
spring.security.oauth2.client.registration.google.client-secret=${GOOGLE_CLIENT_SECRET}
spring.security.oauth2.client.registration.google.scope=openid,email,profile
spring.security.oauth2.client.registration.google.redirect-uri=http://localhost:3000/callback
spring.security.oauth2.client.provider.google.authorization-uri=https://accounts.google.com/o/oauth2/auth
spring.security.oauth2.client.provider.google.token-uri=https://oauth2.googleapis.com/token
spring.security.oauth2.client.provider.google.user-info-uri=https://www.googleapis.com/oauth2/v3/userinfo
spring.security.oauth2.client.provider.google.user-name-attribute=name

# ========== Custom App Configuration ==========
my.reportFilePath=/home/ongraph/Downloads/
